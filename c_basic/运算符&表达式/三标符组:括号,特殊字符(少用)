实验证明:
	预处理.i文件, 没有处理{} [] () 等特殊符号.
	编译之后.s文件, 是汇编文, 更和这些东西扯不上关系.

	总结:
		这些特殊字符其实很少用!! 不要管.



1.双标符组(双标符) (old)
	基本  替用-双标
	{    <%
	}    %>
	[    <:
	]    :>
	#    %:
	##   %:%:



2.三标符组(三标符) (new)
	基本  三标符组
	{    ??<
	}    ??>
	[    ??(
	]    ??)
	#    ??=
	##   ??=??=

	\    ??/
	~    ??-


	^    ??'
	|    ??!





由此可见, '三标符组'完全有能力取代'双标符组' !!
目前c/c++ 基本都是使用'三标符组'.

主要是: 
	括号'{}, []':
		{} 主要用作-定义: 宏体or 函数体or 数组体or 结构体
		[] 主要用作-引用: 数组体or 结构体

	宏-字符串替换'#,##':
		#  用作: 宏替换字符串, 在宏中使用字符串常量.
		## 用作: 宏中的变量or 字符串的'链接合并'.

	连句'\':
		用作续句, 一句话写不完, 下一句继续

	类-释构函数前缀'~':
		暂时只知道在'类-释构函数'中有用到.



还有其它:
	()  函数参数, 指针引用, 表达式间隔等作用

	->  结构体,类实体的元素引用

	.   数组,结构体,类实体的元素引用

	,   数组,变量,函数参数的间隔







#include <iostream>

//合并操作符##将出现在其左右的字符序列合并成一个新的标识符
#define t(x) { hello##x }

//将传入的参数变为字符串，字符串化
#define s(y) #y
 
using namespace std;
 
int main(void){
	int hello1 = 10;

	//将hello和1链接形成hello1,hello1是一个变量
	cout<<t(1)<<endl;

	//将hello变为字符串
	cout<<s(hello)<<endl;
	return 0;
}
