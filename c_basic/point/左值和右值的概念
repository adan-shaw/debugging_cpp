左值, 右值的概念, 必须要带'=' 号来描述的, 没有等号, 就没有左值和右值的概念;

变量定义中, 不出现'=' 号就没有左值, 右值的概念!!
(实际是有的, 相当于右值默认初始化为: 随机值)

ps:
	变量类型声明, 不属于左值, 右值的概念范围,
	变量类型声明, 是给编译器看的, 程序实体中, 变量类型声明是不存在的, 只是告诉编译器, 帮我把这个变量, 定义为什么类型而已!!



所以有, 最简单的左值, 右值, 变量类型的概念:
	int idiot;					//变量类型=int, 左值=idiot(变量地址空间), 右值=随机值(变量空间中的存放值)
	int money = 999;		//变量类型=int, 左值=money(变量地址空间), 右值=999(变量空间中的存放值





总结:
	C/c++语言中可以放在'=赋值符号'左边的变量, 
	即具有对应的可以由用户访问的存储单元, 并且能够由用户去改变其值的量;

	左值表示存储在计算机内存的对象, 而不是常量或计算的结果;
	或者说左值是代表一个内存地址值, 并且通过这个内存地址, 就可以对内存进行读并且写(主要是能写)操作;
	这也就是为什么左值可以被赋值的原因了;

	相对应的还有右值:
		当一个符号或者常量放在操作符右边的时候, 计算机就读取他们的"右值", 也就是其代表的真实值;
		简单来说就是, 左值相当于地址值, 右值相当于数据值;
		右值指的是引用了一个存储在某个内存地址里的数据;



简单来说就是(不抛书包):
	变量类型, 给编译器看的, 描述变量类型, 程序实体中不存在的;
	左值, 编译器分配的变量实体地址, 不能修改, 但可以引用;
	右值, 程序员可以随意修改的'变量空间上存放的值';
