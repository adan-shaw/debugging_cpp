print struct 打印结构体, 是clang 编译器特有的编译器函数,

那么可不可以, 直接用clang 编译器, 编写一个.so 共享库, 绕开限制, 把.so 共享链接库API 给gcc 调用, 

这样就可以把这个方便的打印结构体API 给使用了;



结论:
	缺点1:
		复杂的结构体, 还是打印不出来;
		实际上, clang 本身的打印结构体API, 也是很鸡肋的, 有些极其复杂的结构体, 还是不能打印;
		简单的结构体, 可以用这套方法;

	缺点2:
		结构体都是固定的, 倘若更改, 需要重新编译动态链接库;

	缺点3:
		碰到指针变量, 只能打印指针的内存地址, 因此这种打印方式, 内嵌时, 不能出现指针, 最好都是实体;

