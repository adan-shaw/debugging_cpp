0.声明:
	本方法只谈论测试技巧, 不谈论测试原则(在挑选人员上面, 熟悉业务也是很重要的);
	当然, 测试的首要原则, 就是要对业务非常熟悉, 本方法只适合高级程序员(c/c++), 高级操作系统技术员(BSP), 分析测试团队存在的问题;



1.测试先得从显眼的, 着眼的问题先解决,
	然后再解决全局性的问题;
	先具体, 后模糊;
	先局部, 后全局;
	先比如说:
		测试样例A:
			点击具体某个按钮, 具体某个逻辑跑崩溃了, 这种明确的问题, 应当先找到问题, 优先修复;
		测试样例B:
			点击某个启动按钮, 整个区域功能/整个程序功能都跑起来了, 然后崩溃了, 这种模糊的问题, 可以放在后面测试;
			因为具体原因的确不好找, 也有可能是会出现重叠的情况;
			但是这个整体闪退的问题, 的确是交付上, 比较棘手问题, 如果交付产品时, 出现这种问题, 交付人员不好交代;
			但其实, 如果某个软件团队, 到了交付那一天都还会出现这种问题, 只能说明:
				* 要么进度太赶, 老板夸下海口, 1 天造飞机, 完全忽略现实的可能性;
				* 要么团队偷懒, 大部分情况下是: 问题出在哪, 就是哪的测试团队, 开发团队的双端责任, 肯定有摸鱼的情况;

	还可以对部分问题进行归类&分类:
		一旦某类问题出现的次数足够多, 就重点复查该部分的代码;
		一旦修复bug, 然后复查, 排除重复bug;
		如此往复, 从具体, 到模糊, 渐渐就可以排清项目中的bug 了;

	综合来说:
		这个分析可以提供一套: 测试样例的优先级分级, 测试进度管理, 团队管理的一个基准参考;





2.值域测试, 数据有效性测试, 逻辑遍历测试, 优先级大于性能测试:
	一个健全的软件产品, 必然是逻辑优先, 性能次级;
	硬件每年都在更新换代, 软件产品的核心价值, 是逻辑和算法, 性能只是交付时的表现加分项, 好卖一些, 但不是核心重点;
	当然你把iPhone 和android 拿来比较性能问题, 这没法比!
	性能或许是消费者看到的东西, 比较眼浅的东西,
	实际上iPhone 和android 的区别, 主要是软件架构设计的区别;
	这种情况下, 其实还是软件架构 > 软件逻辑 > 软件性能;
	只是软件性能, 是展示给用户的最后一步, 比较直观的一步, 当然这个直观因素很重要;

	综合来说:
		这个分析可以提供一套: 软件测试的重点方向区分





3.测试方法上面:
	自动化测试大于人工测试!! 这点尤其体验在数据自动化测试上面;
	按钮, 界面, 基础功能这些, 可以交给人工测试, 手动点点点;
	但实际上, 真正的数据有效性校验, 逻辑校验, 算法校验, 是根本不可能靠人工测试出来的, 测试出来的结果, 参考价值也就那样;
	性能测试, 有些可以凭人的直觉测试出来性能, 但是大部分情况下, 性能测试也要有基准指标和软件校验, 这里面有人工测试的成分, 但是比较少;

	综合来说:
		这个分析可以提供一套: 区分对待程序自动化测试/人工测试的基准





4.压力测试, 暴力测试, 是检验逻辑是否跑顺畅的指标, 但不能作为数据有效性测试, 
	因为很多情况下, 跑得很快很爽的情况很多, 但很有可能跑出来的数据都是错的;
	因此, 压力测试, 暴力测试, 只能校验程序逻辑是否跑顺畅

	综合来说:
		这个分析可以提供一套: 压力测试, 暴力测试的存在意义;





5.双端校验的重要性:
	任何测试人员, 尤其是主管级别, 必须是一线开发人员,
	如果不懂程序逻辑实现, 那么碰到问题也想不通, 出现这个问题的原因, 也没办法保留有效的调试log/coredump 文件/操作截图/操作视频,
	这种情况下, 就会导致有大量的无效测试, 甚至会扰乱开发人员的调试进度;
	但当然, 测试需要很心细的去做, 也要养成非常好的写日志, 记录bug 的习惯,
	所以大多数情况下, 手工测试人员, 需要心细即可;
	测试主管, 必须是一线开发人员, 而且必须是很细心的开发人员;

	综合来说:
		这个分析可以提供一套: 正确对待普通测试人员, 清楚认知测试主管和谁可以当测试主管;





6.测试的环境保存, 减少重复做工, 提高测试效率的意义:
	* 大多数情况下, 测试项目可以保存状态, 必须不断保存状态, 免得测试工作, 动不动重新配置, 重头开始,
		这样大量的重复配置, 会导致测试效率严重下降, 严重影响的测试团队的作用;
	* 当程序更新迭代过大, 以往的旧测试数据, 以往保存的测试项目, 已经不能支撑新的测试需求的时候,
		这时候必须下决心重新配置一次测试环境, 这个没办法避免;

	综合来说:
		这个分析可以提供一套: 尽可能多的保存环境, 减少重复做工, 提高测试效率的意义;





7.测试工具的使用:
	在windows 平台, 有windows 平台的测试工具;
	在linux 平台, 有Linux 平台的测试工具;
	无论是基础测试人员, 还是测试主管, 都必须熟悉操作系统, 以及各种软件工具的使用;
	测试主管除了必须是一线开发人员之外, 很细心之外, 操作系统以及各种软件工具的使用水平, 也必须足够高;

	综合来说:
		这个分析可以提供一套: 测试工具 & 操作系统使用水平的重要性;




