#
# 1.cpp构造函数的重要性
#
cpp 是一种基于类来描述程序的语言(OOP 面向对象设计语言), cpp 最基础的数据载体, 就是'class类'(struct 也是class 适配剪裁得来的);
anyway, 只要有'class类', 那么就必须要有构造函数!!

构造函数主要负责的工作就是(两个重点):
	* 描述'class类'应该如何创建(默认构造/带参数构造(参数继承)/拷贝构造/赋值构造, 等等)

	* 在'class类'构造前, 进行各种init 初始化工作(初始化各个'class类'变量的值)

你在研究c++ 'class类'的时候, 第一步就会遇到构造函数, 
因此, 构造函数几乎是'class类'的第一步, 第一个需要解决的问题, 非常重要, 非常常用!!

ps:
	你想要new, 或者创建class类实体的时候, 每一种创建方式, 都需要一种class 构造函数手动支撑!!
	class A a;							//默认构造函数
	class *pA = new A();		//赋值构造函数
	class *pAA = new A(5);	//赋值构造函数+参数传递
	



#
# 2.析构函数的重要性
#
'class类'的析构函数, 倒是没有多大的作用, 甚至'class类'可以没有析构函数(省略析构函数, 如果没有资源需要释放的话), 

析构函数也可以设置为virtual function 虚函数, 以节约'class类'的内存使用;
(如果你使用的是工厂模式的话, 可以这么做, 如果是单例模式, 就没有这样做的必要了)





#
# 3.c++构造函数详解
#
//c++ 常见的4 种构造函数
/*
	* 隐式构造函数
	* 显式构造函数
	* 拷贝构造函数(浅拷贝/深拷贝)
	* 赋值拷贝构造函数(运算符重载)

ps:
	- 析构函数(不重要, 可以不用理会)
*/

//c++ 构造函数要注意的要点
/*
	* 构造函数不能修改默认返回值
		构造函数不能修改默认返回值, 默认返回值为: 该class 类的实体指针!! [class&]

	* 不能前置改变构造函数的返回类型, 构造只能返回[class&], 并且是自动填写的!!
		'构造函数'不能是static 函数, 也不能是const 函数!! inline 函数更不可能;
*/

//c++ 构造函数的体外话
/*
	- 构造函数'初始化值'变量
	- 构造函数之间的互相调用
*/

