* 不需要编译的pip 包, 直接利用python venv 虚拟环境中的pip 进行安装;
	(如果python venv 中的pip 已经损坏, 则你需要自己下载对应版本的get_pip.py 进行恢复)



* 如果pip 默认的包版本, 和你python-venv 中的python 版本不匹配, 则你需要去pip 官网, 查找历史包, 进行源码匹配安装;



* 如果源码匹配安装过程中, 涉及到python c++ 源码编译, 则最好确保编译通过, 且不产生*_d.so 共享链接库;
	如果编译成功但生产出*_d.so 共享链接库, 则说明版本不匹配, 你还是用不了;

	如果编译不成功, 也是版本不匹配, 你也用不了;



* 如果在pip 官网都找不到对应的pip 包, 则你只能自求多福, 难道自己实现一个pip 包? 0.0
	(ps: 自己封装一个pip 包比较麻烦, 要写源代码, 纯python 源代码简单些, python/c++ 混合代码非常难写)
