# python 中容器排序简介
'''
	在python 中, 需要做排序的容器, 基本上就是list/dict;

	enum 枚举是不需要排序的,
	array 存放数字的时候, 是可以排序, 但顺序乱了, 一维数组排序, 实际上没啥意义;(查找最大值/最小值还有可能)
	string array 也是没有排序的必要的, 字符排序? 那字符串还有什么意思?

	tuple元组 不能更改, 没有排序的必要, 强行排序必须强转为list, 实际也是list 排序;
	set集合 也是不需要排序的, 排序后的set集合, 对其使用没有多大帮助;

	numpy 矩阵, 基本上也是不需要排序的, 矩阵数据排序之后, 就没有意义了;



	因此, python 中, 需要做排序的容器, 基本上就是list/dict;

	array 存放字符串/数字时, 有时候也需要进行排序, 反序;
'''





# sort() 与sorted() 的区别
'''
	sort() 只有list 容器有, 其他容器都没有, 不好用; (不会触发copy)
	sorted() 是一个内建函数, 可以通用, 十分好用; (会自动触发copy, 将排序好的元素拷贝成新list返回)[总是返回一个list]

	ps:
		由于sorted() 会自动copy 容器, 所以你甚至可以对tuple元组进行sorted(), 得到一份有序的copy;


	sorted()参数:
		iterable: 可迭代的容器对象;
		cmp     : 比较的函数; cmp函数必须遵守的规则为: 大于则返回1, 小于则返回-1, 等于则返回0; (python3 中删除了这个参数, 弃用)
		key     : 用来进行比较的元素, 可指定为cmp_to_key() 函数, 替代cmp 关键字; 默认值: None;
		reverse : 排序规则[reverse=True=降序, reverse=False=升序(省缺值)]

	ps:
		Python3中移除了cmp内建函数, sorted函数也没有了cmp这个关键字参数, 
		但可以通过functools模块中的cmp_to_key()来对自定义的cmp函数进行包装, 
		然后就能赋值给sorted函数的关键字参数key, 来间接实现Python2中cmp函数用于排序的效果;



	* lambda 关键字的用法, 略;

	* 类的__lt__() 排序方法(有点类似运算符重载), 略;
'''





# 为什么要多用list 来进行排序相关的操作?
'''
	由于sorted() 总是返回一个list, 
	因此, 对dict 进行排序, 会比想想中复杂!! 

	首先sorted() 后会自动转为list, 
	然后又由list 转为dict, 消耗十分大!!

	因此, 用dict 尽量不排序, 需要排序, 宁愿用list, 再复杂也用list;
	list 可以直接拍开, 变成一个表, 十分好操作;
'''


