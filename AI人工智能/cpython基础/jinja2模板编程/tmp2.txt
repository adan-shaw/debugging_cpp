{# jinja 注释语句, 是可以换行的; 
	 如果不进行注释, 则这些字符串也会被读入到jinja2 输出文件中(一般不允许这种情况出现)
#}



{# jinja2 循环逻辑的先要条件:
	 * 对应的python 数据结构是plist[pdict{}];

	 * 普通变量是一键替换全部, 不可深入内嵌模块, 循环体可以深入内嵌模块, 但需要遵循格式: 'plist[pdict{}] * n层'
		 有n 层, 就需要嵌套n 个plist[pdict{}], 十分笨重, 嵌套过深容易造成消耗过大, 最多3 层, 嵌套两层, 否则你脑子不好使, 换一种方法更快乐;

	 * 有语法糖, 就用语法糖, 不要在乎性能, 在乎性能就不是python;

	 * 调用tm.render(p=A, p2=B) 时, 需要传入模板需要的所有参数!!
		 左值p = jinja2 模板中可以引用的值;
		 右值A = python 逻辑中的数据输入源;
#}



{# 筛选少于18 岁的学生( ) #}
{% for tmp in school2 %}
	{% if tmp.age < 18 %}
		{{- tmp.name }}
	{% endif %}
{%- endfor %}



{#
	循环控制(可以使用break以及continue):
		jinja2.ext.loopcontrols
	默认情况下,jinja2 的for循环中不支持break和continue,
	但添加完此插件后, 就可以使用了, 很方便;
#}
