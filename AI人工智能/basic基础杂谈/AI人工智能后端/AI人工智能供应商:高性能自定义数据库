#
# 0.AI 人工智能前端数据采集简介
#
ai 数据采集可以是:
	text 文本
	图片
	音频
	视频
	等复合数据流

如果是重数据流数据, 一般需要前端系统进行预处理, 即压缩,筛选成规格统一规则, 然后再提交到后端处理;
但如果是重数据流, 前端设备也不具备压缩, 筛选条件,
这时候, 只能强制要求前端设备, 按照后端服务器的要求, 进行设备定制!!
例如:
	摄像头数据流较重, 而前端设备不具备对视频数据流进行压缩, 转码的能力,
	因此只能定制摄像头生成的数据流, 命令摄像头生成服务器指定的码流, 直接提交到服务器, 而不需要转码, 这样可以省掉很多内耗式的转换, 提高设备的可靠性;
	但缺点是: 设备更新, 服务器更新之后, 设备就不能用了;
	(这是缺点? 对于设备商来说, 这简直是完美的, 逼用户更换设备的手段!!)

有条件的前端设备, 还会对数据进行预处理, 最后提交机器学习框架所需的元数据, 最后再将元数据, 进行学习过滤, 最终决定这个元数据, 是否需要存放到数据库中;

因此, AI 数据库的存放目标, 是AI 机器学习的元数据;





#
# 1.AI 数据库简介
#
AI 数据库, 一般需要高性能, 自定义索引, 复合数据量数据库;

一般来说, 这就为'高速专属索引算法数据库(fpga)', 创造了市场;

AI 数据库存放的元数据, 可能会有:
	text 文本
	图片
	音频
	视频
	等复合数据流

因此, 高索引性能, 成为AI 数据库的标配, 一般情况下, 机器学习不不停增删数据, 大概率也会是树形存储结构, 只不过会提供一些特殊的索引规则, 提高索引效率而已;

树形数据结构的优势:
	综合能力强, 无论是索引, 增删, 修改, 而且容量非常大!!





#
# 2.fpga 自定义索引算法数据库的应用
#
一般情况下, 高端的数据库, 都会使用fpga 集成专用的索引算法, 以提高数据库的索引效率;

进而提高数据的性能, 这点在树形数据结构中, 非常重要;

另外:
	* 如果是hash 数据库结构, 其实索引性能本身就很强, fpga 可能在限制其容量大小, 和数据增删等操作, 进行处理;
		这种情况, 一般也是不需要fpga 的;

	因此, fpga 大概率也是优化树形结构的数据库索引性能;



fpga 失效的场合:
	* 如果是存放在内存中的数据, 多半是hash 结果比较适合, 而且容量不大, 这时候, fpga 可优化的空间, 是没有的(都存放在内存中了, 还要fpga 作甚?)
		fpga 是介于PC 内存 - 存储设备之间的优化算法中间件, 如果是直接索引内存数据, 是不需要fpga 的;



