#
# 1.config 系统对游戏服务器的重要性:
#
把整个全局变量, 写到复杂config 里面, 然后通过reload_config, 实现部分关键的全局变量重写, 这种思维在某些复杂app server 中非常常见;

例如:
	游戏服务器基本就是一个依赖config 导入参数的服务器, 
	这样可以方便策划不断修改游戏数值平衡, 从而不断迎合玩家的口味, 
	这种重度依赖config 导入参数的服务器, 是变动性比较大的服务器, 可调节要求高, 而且要求调节方便, 快速, 可动态更新. 

	如果config 信息存放在'mysql/redis'中, 则还需要写一个工具, 自动校验参数填写是否正确, 
	毕竟游戏策划, 或者配置参数平衡的技术员, 可能不是专业的技术员, 或者专业的技术员, 也不可能一一校验,
	写一个自动校验参数工具, 可以提高运维效率和准确率, 非常值得投入;

	参数最好存放在'mysql/redis', 这样每个server 只需要动态刷新一次, 就可以全部更新参数, 实现热更新;
	这种动态参数设计, 应用也非常广泛, chatgpt 也是这么做的, 实际操作起来, 工作量很大;





#
# 2.建议config, 一般使用ini, 配置一些简易的启动info, 方便动态修改;
#
(略)





#
# 3.复杂config(可动态调控, 可动态配置, 方便后续运维, 调整, 修改的config)
#
这种config 一般使用json/xml 来配置, 由于复杂度较大, 配置完毕之后不做校验, 大概率会出错!!
(谁也不是神人, 等一下填错了, 找错误找半天都不知道在哪, 就没意思了)

一般游戏服务器, chatgpt, 这类server 为了动态调节参数, 实现逻辑动态调整, 都会使用这种复杂config, 以便后续动态调整和维护;
但一般都会做一个动态调整的工具, 否则真的没办法校验修正之后的参数, 是否正确;

这些复杂config 数据, 一般也会存放在db 里面, 方便各个server 进行动态更新, 不用每个server 一一去更新;

