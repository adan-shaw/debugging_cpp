请详细阅读:
	你真的理解内存分配吗.html



brk() 函数为什么可以不停扩张, 难道系统就内部就一个进程??

这都是因为虚拟内存分配的关系.


对于linux 系统来说, 每一个进程的内存地址空间, 都是虚拟出来的.
因此, 每个进程的虚拟内存地址都是唯一的.
哪怕是fork() 出来的子进程, 都有自己唯一的虚拟内存地址空间.

32 bit 系统, 这个虚拟内存地址空间, 是4gb 的大小.
64bit 系统, 这个虚拟内存地址空间, 是几乎无限大.



brk() 申请的内存, 的确就是不停扩张, 不停收缩, 很狗血,
但是, 实际上brk() 申请的内存, 并不会马上映射到物理内存中.
而是有实际数据读写的时候, 才会映射到物理内存中.



所以, 频繁new/delete() 内存块, 也就会频繁brk(), 会引发很多很复杂的连锁反应.
所以, 即便是c++ 程序, 也基本上有ptmalloc, tcmalloc, jemalloc 等内存回收管理器.
来减少brk() 的频繁操作, 减少内存映射带来的问题.


作为程序员的你, 也更应该减少内存new/delete(),
但是也要防止内存长期空占用.

既要减少内存长期空占用, 也要减少频繁操作brk() 产生内存碎片
