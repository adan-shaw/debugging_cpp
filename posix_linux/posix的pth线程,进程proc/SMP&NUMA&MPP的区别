SMP(Symmetric Multi-Processor)对称多处理器:
	SMP服务器的主要特征是:
		系统中所有资源(CPU 、内存、 I/O设备等)都是共享的

	也正是由于这种特征, 导致了SMP服务器的主要问题, 那就是它的扩展能力非常有限; 
	对于SMP服务器而言, 每一个共享的环节都可能造成SMP服务器扩展时的瓶颈, 而最受限制的则是内存; 

	由于每个CPU必须通过相同的内存总线访问相同的内存资源, 
	因此随着CPU数量的增加, 内存访问冲突将迅速增加, 
	最终会造成CPU资源的浪费, 使CPU性能的有效性大大降低; 
	实验证明, SMP服务器CPU利用率最好的情况是2-4个CPU; 

	linux 系统会自动屏蔽SMP 系统的硬件, 实现一视同仁;
	所以实际上, 单个物理主机上, 有多少个intel 处理器, 实际上都不影响其性能(只是内存冲突会增加);
	SMP 多处理器, 跟SMP 单处理器多内核, 并没有任何差异;
	直接通过setaffinity线程绑定cpu内核, 控制进程任务跑在指定内核上即可,
	这种智能化控制, 是linux 内核的优势所在;
	(其他系统可能没有这种控制方案)





NUMA(Non-Uniform Memory Access)非一致性内存访问:
	NUMA服务器的基本特征是具有多个CPU模块, 
	每个CPU模块由多个CPU(如8个CPU)组成, 并且具有'独立的本地内存、I/O槽口'等; 

	由于其节点之间可以通过互联模块(称为Crossbar Switch)进行连接和信息交互, 
	因此, 每个CPU可以访问整个系统的内存(这是NUMA系统与MPP系统的重要差别);

	即NUMA 系统中, 每个cpu 有独立内;
	整个系统中, 也有多个CPU共享内存;

	显然, 访问本地内存的速度将远远高于访问远地内存(系统内其它节点的内存)的速度, 
	这也是非一致存储访问NUMA的由来; 

	为了更好地发挥NUMA系统的性能, 开发应用程序时需要尽量减少不同CPU模块之间的信息交互;





MPP(Massive Parallel Processing)[局域网分布式系统]:
	它由多个SMP服务器通过一定的节点互联网络进行连接, 协同工作, 完成相同的任务, 
	从用户的角度来看是一个服务器系统, 
	其基本特征是由多个SMP服务器(每个SMP服务器称节点)通过节点互联网络连接而成, 
	每个节点只访问自己的本地资源(内存、存储等), 
	是一种完全无共享(Share Nothing)结构, 
	因而扩展能力最好, 理论上其扩展无限制, 目前的技术可实现512个节点互联, 数千个CPU;

	目前业界对节点互联网络暂无标准, 如NCR的Bynet , IBM的SPSwitch, 
	它们都采用了不同的内部实现机制, 但节点互联网仅供MPP服务器内部使用, 对用户而言是透明的;

	MPP 实际上就是局域网分布式系统, 利用高速局域网+SMP 系统, 共享资源;
	(离广域分布式系统, 只差一步)



