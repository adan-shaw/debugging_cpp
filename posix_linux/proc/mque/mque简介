//mqueue 消息队列简介
/*
	'posix消息队列'的优势:
		'posix消息队列'可以通过mq_send(), mq_receive() 阻塞发送/读取[默认是阻塞的];
		当'posix消息队列'已满的时候, 阻塞到空闲为止, 空闲则发送数据, 发送完毕再返回;

		由于'posix消息队列'的mqd_t类型, 实际上也是一个int,
		所以'posix消息队列'也能用select/poll/epoll 去检查io 状态,
		'posix消息队列'还可以通过绑定系统信号, 由系统信号来通知什么时候读取数据, 十分方便;
		但为了减少信号阻塞, 尽量收到信号之后, 通知子进程/子线程去接收数据, 比较好;

		不用考虑信号会丢失的问题, 基本不会丢失的, 
		但容易产生覆盖, 后来的信号被覆盖了, 这个问题比较麻烦,
		考虑使用实时信号来解决问题, 实时信号不会丢失, 会自动缓存, 因此也比较适合'posix消息队列'使用;


	'posix消息队列'的消息数量, 每条消息的大小:
		消息队列的个数, 每条消息的大小, 都是可以定义的,
		但创建'posix消息队列'之后, 就不能修改了;


	'posix消息队列'与''System V消息队列''的区别如下: 
		* 消息队列的读操作:
			'posix消息队列'总是返回最高优先级的最早消息,
			'System V消息队列'则可以返回任意指定优先级的消息;

		* 当往一个空队列放置一个消息时:
			'posix消息队列'允许产生一个信号,
			'System V消息队列'则不提供类似的机制;

		* 'System V消息队列'返回的是一个fd, 可以使用select/poll/epoll 等io 复用检查;
			但'System V消息队列', 限制条件较多;
			'System V消息队列'不允许使用信号通知;
*/
