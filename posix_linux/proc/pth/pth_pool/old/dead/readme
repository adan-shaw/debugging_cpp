//这个版本,是一个任务,创建一个线程的版本
/*
	并不是任务队列, 而是疯狂创建线程, 并不是循环操作的;

	这个其实也可以, 只要堆栈不释放的话, 疯狂切换轻进程, 这样就不需要受太多规矩, 也挺好;

	还能传递一个函数指针, 但很不巧的就是:
			全部参数, 都必须通过推送堆栈的形式传输;
			好处是简单方便, 灵活性高, 适合非实时系统, 非绑定的轻线程;
			坏处是: 频繁释放资源, 



	ps:
		其实也是不行的, 创建线程的时候, 线程函数是指定的void* func(void*); 类型
		基本上都是固定的, 不会有太大改变, 所以这种方式, 消耗更大, 频繁创建线程, 还不如fork()
		这种创建方式, 由于共享了CLONE_VM, 一旦崩溃, 系统会触发回收操作, 这时候, 进程崩溃,
		还不如fork();

		分时任务, fork() 其实都挺好用



	这个版本做得十分差, 还线程泄漏:
		main()->31行, arg = (int*)malloc(sizeof(int));
		这个内存并没有被释放, 垃圾版本, 抛弃;
*/


本版本源码来源: 源于互联网, 十分恶心, 代码质量堪忧, 水平太低(大学生水平);
