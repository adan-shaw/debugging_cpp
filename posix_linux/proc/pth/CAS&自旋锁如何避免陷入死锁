自旋锁, 如何防止自旋锁陷入死锁?
	* 确保临界区里面的操作, 不能陷入阻塞, 不能崩溃, 不能两个临界区抢夺同一个'全局变量/静态变量'!!
		也不能内存泄漏(废话,哪里都不能内存泄漏);

	* 设置自旋锁循环try 加锁次数, 防止加锁竞争时, 陷入死锁, 没办法跳出'循环死等';
		(最好多用try lock 类的函数会更好一点)

	* 如果有线程池, 有监管线程, 就要命令各个work线程: 定期响应监管线程的存活检查;
		发现陷入阻塞的work线程, 计数+1;
		计数积累到一定程度, 即总计时超过多少次, 即认为work线程已经陷入死锁, 准备销毁重启;
		普通一两次计数积累, 一般认为是work线程偶尔执行了一个长时间任务, 忽略不计, 只要work线程响应一次, 监管线程则需要清空所有计数;
		(如何在销毁前保存线程内的数据, 十分麻烦, 所以尽量不要走到这一步!!
		 但如果没法避免, 可以通过线程属性, 将准备销毁的旧线程栈, 继承下来, 
		 然后新的线程启动时, 附加线程属性=旧线程的线程栈, 这种基本上可以无缝重启, 
		 但仅限于资源死锁导致的bug, 如果是数据错误导致的bug, 这样重启还是会继续出问题)
