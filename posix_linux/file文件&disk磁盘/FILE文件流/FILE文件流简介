* 用户空间-cp
	FILE文件流, 操作时, 肯定经过用户空间, 有一定消耗, 但程序简单;
	用映射mmap-shared模式, 可以节省磁盘操作消耗, 但程序会稍微复杂一点;


* 多进程/多线程共享一个文件的读写, 是一个愚蠢的行为;
	这样只会无故增加程序的开发成本而已, 浪费时间而已, 绝对不要这么干;
	(真的要这样做, 也用mmap 来实现)


* 读取二进制数据, 基本上都是只读不写的, 建议用mmap 快速映射, 性能更好(本文件弃用)
	不要使用FILE/fd 操作二进制数据;

	但在保存应用数据(结构体/类实体), 你可以用FILE/fd 操作二进制数据,
	这时候将应用数据(结构体/类实体), 冲刷到disk 磁盘中, 可以保存应用程序运行过程中产生的应用数据;


* 命名规律:
		fd 用			: fd
		socket 用	: sfd
		FILE* 用		: pfs (point FILE steam 文件流指针的意思)
