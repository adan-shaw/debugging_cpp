网文: https://linux.cn/article-4099-2.html


lsof简介:
	lsof是一个综合资源查询工具, 无论设备, or 进程, or 文件, 
	unix 一切皆文件, 所以lsof 可以完成很多工作. 
	lsof 可以代替netstat or ps 的工作, 还能问询<已经打开的文件>



lsof基础语法:
	默认: 没有选项, lsof列出活跃进程的所有打开文件
	组合: 可以将选项组合到一起, 如-abc, 但要当心哪些选项需要参数
	
	-a : 结果进行"与"运算(而不是"或")
	-l : 在输出显示用户ID而不是用户名
	-h : 获得帮助
	-t : 仅获取进程ID
	-U : 获取UNIX套接口地址
	-F : 格式化输出结果, 用于其它命令. 可以通过多种方式格式化, 
			 如: -F pcfn(用于进程id、命令名、文件描述符、文件名, 并以空终止)





//***********************
//lsof 一: 网络部分
//***********************
1.1 使用-i显示本机的所有连接
lsof -i # 显示所有IPv4 链接
lsof -i 6 # 显示所有IPv6 链接

1.2 仅显示本机的TCP 链接
lsof -i tcp
lsof -i udp

1.3 显示指定<本机端口>相关的网络信息
lsof -i :80

1.4 显示本机<链接到>指定的目标主机, 的socket 链接
lsof -i @192.168.0.101

1.5 显示本机<链接到>指定的目标主机, 指定的端口, 的socket 链接
lsof -i @192.168.0.101:6666

1.6 找出监听端口(仅tcp 有效, -s 选项)
lsof -i -s tcp:listen

lsof -i | grep -i listen # (等同于lsof -i -s tcp:listen)

1.7 找出已建立的连接
lsof -i -s tcp:established

lsof -i | grep -i established

1.8 显示某个端口范围的打开的连接(不成功~~?)
lsof -i @fw.google.com:2150=2180
lsof -i @192.168.0.101:6665=6666
lsof -i @192.168.0.1:6665=50000





//***********************
//lsof 二: 用户信息部分
//***********************
2.1 使用-u显示指定用户打开了什么
lsof -u adan

2.2 使用-u user来显示除指定用户以外的其它所有用户所做的事情
lsof -u ^adan

2.3 杀死指定用户所做的一切事情
kill -9 `lsof -t -u adan`

反之, 求用户名下, 所有打开的进程pid
lsof -t -u adan

2.4 显示adan 连接到192.168.0.1所做的一切
lsof -u adan -i @192.168.0.1





//***********************
//lsof 三: 命令和进程部分
//***********************
3.1 使用-c查看指定的命令正在使用的文件和网络连接(用途未知)
lsof -c syslog-ng

3.2 使用-p查看指定<进程PID>已打开的fd情况
lsof -p 10075

3.3 -t 选项只返回进程PID
lsof -t -c vlc
lsof -t -c firefox-esr

3.4 同时使用-t和-c选项以给进程发送 HUP 信号
kill -HUP `lsof -t -c sshd`
kill 9 `lsof -t -c sshd`





//***********************
//lsof 四: 文件和目录
//***********************
4.1 显示与<指定目录>交互的所有一切
lsof /var/log/messages/
lsof /home/adan

4.2 显示与<指定文件>交互的所有一切<也可以指定进程二进制文件>
lsof /home/adan/svn/__cpp_basic_lib/trash_old_demo/adan_release/adan_srv/adan_srv-v5-sync/srv/pth_pool


4.3 lsof +L1 显示所有打开的链接数小于1的文件
		这通常(当不总是)表示某个攻击者正尝试通过删除文件入口来隐藏文件内容
lsof +L1




//**********
//demo :
//**********


lsof 命令的用法很多, 其中最经典的就是:
lsof -p <进程id>

正如: ps aux | grep nginx 一样经典. 



linux启动后, 会默认打开3 个文件描述符, 
即fd = 0, fd = 1, fd = 2, 分别对应stdin, stdout, stderr


但是通常, 如果你用xfce-terminal or 底层的<黑屏终端>, 
你想查看<黑屏终端>所打开的fd 文件描述符的步骤:
1. $$ 查看<黑屏终端>的pid
2. lsof -p <进程id>



你会看到很多文件描述符, 而你并不知道这些文件为什么会<打开在一个新进程里面>,

实际是这样的:
	这些都是<黑屏终端>实现时的共享库, 我们经常说so 库共享, 就是这个意思. 
	因为<黑屏终端> 也是内核分派的, 其实现的时候, 肯定有共享库, 因为黑屏有很多个,
	如果每个黑屏都集成<静态二进制代码>, 这样消耗系统内存很大, 
	共享so 库是最节省的内存方式, 反正so 库中的函数都是只读的. 

	这也说明了: lsof -p <进程id> 也可以查看so 库<共享时>的文件描述符fd
						
正常来说, 0u, 1u, 2u 开始的进程描述符FD, 才是你自己打开的<文件描述符>





