1.虚拟化技术list:
	* 芯片虚拟化:
			芯片虚拟化也叫硬件加速, 一般在FPGA 上面最常见:
				- 既可以用FPGA 来模拟CPU, 称之为软核, 
				- 也可以用FPGA 来实现专业硬件加速, 如一些数据库会配备FPGA 硬件加速级算法库;
					(改动性较大, 不适合烧写成固核, 但又需要硬件加速, 只能用FPGA 写成软核硬件加速算法库)
			ps:
				intel 的虚拟化技术(Intel VT-x/VT-d/VT-c), 实际上一种固核指令集, 是对系统虚拟化专门写的intel cpu 硬件加速,
				这部分本质上, 已经是芯片虚拟化的成品了, 不是芯片虚拟化的设计过程!!
				芯片虚拟化的设计, 主要还是FPGA 程序;
				(intel 的虚拟化技术, 对系统虚拟化的支撑, 是业界标准, 也是Intel 目前垄断PC 市场的重要支撑力, 值得借鉴)

	* 系统虚拟化:
			系统虚拟化, 非常常见, 例如: VMware, vbox, kvm, xen, qemu... 等等;
			反正虚拟之后, 就是给你虚拟整个系统, 你可以重启系统的, 基本上都是系统级虚拟化;
			*** 系统虚拟化的优点, 当然是隔绝能力比较好, 有比较大的私有权, 使用自由;
			*** 缺点当然是占用资源较多, 不能最大限度地利用母机器, 这里不再叙述优缺点, 这一节的重点不是讲述各种虚拟技术的优缺点的, 而是分级, 分层的;

	* 软件环境虚拟化:
			系统虚拟化, 近年来非常常见(这几年流行的), 例如: docker, Kubernetes, AppImage... 等等;
			反正虚拟化之后, 就是给一个虚拟化的软件运行环境, 让你跑自己的应用, 基本上都是软件环境虚拟化;

	* 终端设备, 网络设备虚拟化:
			终端设备, 网络设备虚拟化, 一般情况下是不会拆分的, 因为: 单纯虚拟化终端设备, 没意思; 单纯虚拟化网络设备, 也没意思;
			只能两者都虚拟化, 才能对一些设备, 在网络环境下, 做业务仿真测试, 这种平台很多, 如:
				* 汽车行业常见的: 
						vector 工具链, EB-tresos 工具链, ETAS 工具链;
				* 网络设备仿真: 
						gns 思科开源网络设备仿真平台;
				* MCU/单片机仿真: 
						太多了, 不一一举例, 一般MCU 厂家会提供一个仿真软件平台, 如果没有, 就只能硬件调试了: J-link, ST-Link... 等等;
						但一般地, MCU/单片机仿真, 基本上都不能仿真电路, 而是专注于仿真MCU/单片机的程序运行逻辑, 编译检查等, 是否出错, 并不会仿真电路;
						如果要做一个仿真电路的软件, 软件工程就非常庞大了, 很可怕;
				* EDA 仿真软件:
						英国的proteus(作者不熟练, 读书的时候打开过, 可以仿真电路, 但电子元件, MCU/单片机的种类比较少, 
												 应该需要打插件补丁, 才能添加新的电子元件/MCU 到里面的;
												 这种软件, 软件工程太庞大, 数量不多)
			anyway, 一般的终端设备, 网络设备虚拟化, 大概就这些;

	* 3D环境虚拟化:
			不详, 作者不熟, 知道得比较少, 但游戏行业, 或者做opencl, opengl 的, 应该知道得很多;

	* 虚拟化辅助tools:
			一般做数据共享的server, 都可以叫虚拟化辅助tools, 最常见, 最简单的就是: nfs;
			当然还有很多虚拟化辅助tools, 不再展开细说;





2.'VM虚拟机软件'和'仿真软件'的区别:
	both 两者都是假的, 这两者有什么区别?

	* 'VM虚拟机软件':
		'VM虚拟机软件'可以一定程度上, 用在业务上, 意味着性能出色, 可靠, 稳定, 安全, 可以以假乱真的, 直接替代真的;

	* '仿真软件':
		'仿真软件'就是玩具, 不能实际用在生产环境中的, 如: gns (纯python 项目, 假的, 只是模拟软件操作流程而已, 实际上并不可靠!!)

	题外话:
		'VM虚拟机软件'/'网络诊断器'/'仿真软件', 三者的区别: 主要是软件质量要求不同!!
		软件质量曲线要求如下:
			(高软件质量)'VM虚拟机软件' > '网络诊断器' > '仿真软件'(低软件质量)

	- 'VM虚拟机软件': 软件质量是要做到: 以假乱真, 以假取代真的, 从而牟利;
	- '网络诊断器':   软件质量不能太差, 必须在一定时间段内经得起考验, 否则不能真实测试机器的真实性能, bug, 和各种细节问题;
	- '仿真软件':    软件质量一般, 只要计算结果正确, 在得出计算结果之后, 正确保存了report 之后, 崩溃了也没所谓, 软件质量稍微次一点;

	总结:
		各种虚拟化软件, 本质上都是差不多的, 唯一的区别是: 
			能否做到替代真的物理机器, 质量要求而已, 要替代物理机, 仿真的可靠性得做得很真, 其实难度很大的;





