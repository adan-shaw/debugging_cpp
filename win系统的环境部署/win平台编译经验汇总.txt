#
# 1.cache 编译缓存扰乱
#
win 平台下编译, cache 编译缓存扰乱比较严重, 

因为工程比较大, 部分.o 更新比较缓慢, 导致最终生成的.exe 可能更新不到位;

这时候, 需要手动删掉build 文件目录, 重新生成所有cache 编译缓存, 完成cache 编译缓存更新;





#
# 2.windows 平台的软件执行效率
#
实际上, windows 平台的程序运行性能还算可以, 

只是开源编译自动化工具十分垃圾, 

微软也绝对不会投入财力物力, 去做编译自动化工具, 微软的意图是: 
	离开我的自动化编译工具, 离开我的IDE, 你就编译不了, 苹果公司也是这样想的;





#
# 3.在windows 平台, 尽量只用IDE 工具进行开发和编译, qt+qmake 和vscode+cmake 是一个不错的选择
#
windows 平台, 编译源码比较艰巨, 组件编译工具链的过程, 十分复杂;

就连vc++ 默认也不会添加cl.exe 编译器, 到全局变量path 里面, 你就可想而知;

windows 平台想进行编译, 是离不开IDE 工具的, 苹果系统也一样;

反倒直接安装软件包, 比较轻松!!

但linux 平台的自由度很大, 编译工具链也十分强大, 这里面, 你自己琢磨琢磨;

所以做windows 系统开发, 需要谨记以下几点:
	* 能用IDE 自动化集成工具, 就别用命令式/代码式编译工具链;
	* 能直接使用.exe 安装的依赖/server, 就别进行源码编译, 浪费时间;
		当然你可以找有源码的.exe 进行安装, 这样出了问题, 你还能阅读源码查找, 进而解决问题;
	* windows 平台只做敏捷开发, 速度越快越好, 从不纠结编译链接的问题, 也不纠结软件移植, 适配的问题,
		windows 平台就是直接做业务开发的;
	* windows 平台大部分软件安装, 都需要改: 我的电脑->属性->path 全局变量,
		改path 全局变量, 几乎成了windows 软件安装的拿手好戏, 有啥问题就改改, 很正常;
		take it easy, 你也可以看看: win环境部署path   是怎么修改path 全局变量的;
	* 多点保存windows 系统的软件开发包, 这点跟linux 平台保存apt 镜像站差不多,
		主要的意义就是: 做敏捷开发, 方便下一次安装使用
