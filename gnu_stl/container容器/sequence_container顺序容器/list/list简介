list实现简介:
	list列表是一个支持随机访问的'原始线性容器', list列表4 种迭代器访问:
		LegacyInputIterator旧式输入迭代器
		LegacyOutputIterator旧式输出迭代器
		LegacyForwardIterator旧式向前迭代器
		LegacyBidirectionalIterator旧式双向迭代器
	(详情请看: 6种迭代器list)

	list是原始线性容器之一, 是链表数据结构的, 擅长频繁插入, 删除, 排序, 按值查找等操作;
	但不支持随机访问迭代器;



	list 不能pop() 空, 否则list 一旦损坏, 一访问就会遇到空指针, 导致程序崩溃;

	list 操作大量依赖迭代器, 但list 对迭代器失效条件并不敏感, 非常友好, 
	erase() 删除元素操作, 会自动返回指向下一个元素的迭代器, 这点关联容器的erase() 是void 无返回值的;



	forward_list&list的erase()/insert()操作的区别:
		list:
			erase(): 删除迭代器指向的元素, 删除后, 迭代器指向下一个元素, 再执行list 收缩, 最后返回迭代器;
			insert(): 在迭代器指向的元素前面插入, 插入后, 迭代器指向当前插入元素, 再执行list 扩张, 最后返回迭代器;
		forward_list:
			erase_after() 删除迭代器所在的元素后面的元素, 删除后, 再后移一位(相当于后移了两位), 最后返回迭代器;
			insert_after() 在迭代器指向的元素后面插入, 插入后, 迭代器指向当前插入元素, 再执行list 扩张, 最后返回迭代器;
		ps:
			list 收缩/扩张, 并没有任何消耗, 不会影响其他元素;

	任何删除/新增操作, 并不会影响list 的其他迭代器的有效性;
