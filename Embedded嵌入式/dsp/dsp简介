#
# DSP 芯片简介
#
DSP处理器(Digital Signal Processor):
	DSP运算能力强, 擅长很多的重复数据运算, 
	而MCU则适合不同信息源的多种数据的处理诊断和运算, 侧重于控制, 速度并不如DSP.

	DSP特点总结:
		* 对密集的乘法运算的支持, 单指令加法乘法, 还加宽了保存结果的'累加器寄存器'的位宽;
		* 哈佛存储器结构, 支持单周期的MAC指令, 没有总线竞争困扰;
		* 零开销循环:    使用硬件解决循环消耗: 检查循环值的判断/自加自减, 因此循环消耗降到最低;(比软件逻辑的循环,性能强很多)
		* 定点计算持:    定点便宜, 浮点贵;(dsp 一般也是计算整形数据)
		* 专门的寻址方式: 支持更多的寻址方式, 性能强;
		* 执行时间的预测: 由于计算性能比较强, 执行时间预测的准确性较高, 实时性高;(比较少用的特性, 废话)
		* 定点DSP指令集: 导致dsp一般不用c/c++编程, 而用汇编编程; 跟fpga一样, 指令集太复杂/古怪, 不能单纯用c来编码实现;



DSP 不能用Linux内核的, 也不能用微型实时操作系统, 如: RT-Thread, 
这种复杂的cpu, 指令集太特殊, 专注于高速计算的,
基本上就是类似显卡的地位, 在dsp 上面安装'linux/任何其他操作系统'的, 绝对是傻逼;

dsp 只对运算加速, 至于对那种运算加速, 一般情况下, 没有硬性要求;
但dsp 一般都用在高速实时运算当中,
dsp 一般也是单线程, 单核心的, 没有必要造多核;



错觉1:
	DSP 也不一定是处理浮点很厉害,
	DSP 肯定有不俗的浮点计算处理能力,
	但DSP 偏向于浮点数据处理的波形数据处理, 低功耗&&效率高.

	DSP对乘法, 博立叶运算, 浮点运算, or 其他特殊算法, 有硬件加速能力,
	所以对波形数据处理(三角函数), 性能出色, 
	如声波, 无线电, 等等.

	这种理解, 其实是一种错觉, 
	只是因为这些数据, 计算起来都比较复杂, 所以使用dsp, 可以极大地提高运算效率;



错觉2:
	浮点计算方面, nvidia 也很强, 但nvidia 可能对低功耗, 波形数据处理能力不强.

	dsp 只是在小芯片方面, 比nvidia 做得好, nvidia 太大了.
	nvidia 对图形数据处理很出色.
	nvidia 异构并行计算能力出色.
	nvidia 还有游戏的Phys 物理加速(3D 物理世界虚拟加速).
	...
	其实dsp 跟nvidia 还是比较像的, 都可以做成高速计算模块;

