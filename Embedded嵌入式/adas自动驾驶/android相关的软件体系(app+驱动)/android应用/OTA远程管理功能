######################
### 隶属android app ###
######################



'OTA远程管理功能'(Over the Air Technology)简述:
	实际上, 'OTA远程管理功能', 是离不开android 系统 + tbox 无线电远程通信系统的;
	而且, OTA 必须以android 系统的软件app 模式, 来嵌入到整车系统中;

	实际上, 汽车里面的android 系统, 坐舱娱乐, 主要也是:
		* 音乐
		* 电影
		* 汽车广播电台
		...
	政府不推荐在开车期间, 有其他娱乐活动(当然推送一下广告, 会有!!)

	因此, 车载android 系统, 主要的任务就是:
		* 汽车娱乐
		* 导航
		* 远程监控汽车健康, OTA在线管理系统(这部分, 是一体的, 都是android 系统的)
		* 汽车监控camera 摄像头系统(行车记录仪)
		* '汽车门, 窗, 灯, 雨刷控制系统(坐舱控制系统)'

	远程无线电通信, 主要依赖tbox, 
	因此, 'OTA远程管理功能', 其实还是android app;

ps:
	OTA 系统基本上是车载android 的大统领, 基本上统领了:
		* android 系统安全
		* tbox 通信系统
		* 行车记录仪
		* 车载娱乐系统
		* 用户远程状态info 查看app
		* '汽车门, 窗, 灯, 雨刷控制系统(坐舱控制系统)'




#
# 'OTA远程管理功能'主要有
#

* 在线升级系统(不可远程控制):
	本功能, 支持升级多套子系统, 包括:
		- 汽车娱乐系统->升级:
				主要是更新android app, 一般很少更新android 系统(也有, 除非android 系统本身出现致命漏洞)

		- tbox系统->升级:
				主要无线电基带系统升级, 无线电驱动更新/无线电通信安全升级;

		- ap-autosar 汽车底盘系统->升级:
				update ap-autosar 汽车底盘系统(linux 应用更新);

		- cp-autosar 汽车ECU 模块驱动->升级:
				update cp-autosar 汽车ECU 模块驱动(linux 驱动更新);

		- OTA 系统->自我升级:
				主要是更新android app;

		- 监控camera 摄像头系统->升级:
				主要是更新行车记录仪系统的;

		- 三电模块驱动->升级:
			三电模块, 实际属于cp-autosar 范畴的, 可能是3 个ECU, 一个ECU 解决一个问题?
			(一般是'一个ECU群'解决问题; 而一个ECU 有N 个MCU)

		- '汽车门, 窗, 灯, 雨刷控制系统(坐舱控制系统)'->升级:
			(一般是'一个ECU群'解决问题; 而一个ECU 有N 个MCU)

		- 恢复出厂设置->退挡, 复原:
			有升级, 必有恢复出厂设置;



* 客户端控制端(可远程控制):
	本功能主要是android/iphone app, 编写这部分功能, 主要是给用户远程监控汽车信息用的, 包括远程打开汽车摄像头;
	主要包括:
		* 汽车status 状态info 汇报;
		* 行车记录仪数据调用;



* 权限管理, 安全通信管理, 安全升级管理, 安全刷写管理:
	- 权限管理:
			文件权限, android 系统安全管理
	- 安全通信管理:
			通信过程安全管理, 校验数&加密等手段;
	- 安全刷写管理:
			刷写前检查电源是否正常, 数据是否齐全, 刷写包是否完整且已通过安全校验, 等等;
	...



* 刷写各种固件的功能模块:
	这部分, 精通android BSP 的员工, 比较会搞这个;




#
# 杂谈
#
OTA 功能概述:
	通过OTA的优化电池管理、自动驾驶、动力系统等系统, 持续优化车辆的体验和性能;



-刷写文件安全: 
	通过OTA更新的软件数据包, 一般都带有数字签名部分;
	控制器可以通过签名验证算法和密钥, 确认将要刷写的数据包的完整性和合法性;

-文件传输安全: 
	需要更新的软件数据包从云端通过无线网络下载到汽车, 这个数据传输的过程一般都带有保护机制;
	互联网中已经成熟的传输层安全协议(Transport Layer Security, TLS)是最常见的手段;

-诊断安全: 
	汽车OTA过程中往往会伴随通过UDS指令更新标定参数或者触发例程等操作;
	这时候就需要对UDS诊断操作先做一层安全控制, 
	常见的有UDS的0x27服务, 某些OEM还会拓展0x27的子功能或者自定义0x31例程来完成远程诊断的安全校验;

-启动升级过程:
	从整车角度, 需要判断电池余量、挡位等车辆状态信息再开始软件升级;
	这部分的逻辑判断需要由其他应用程序来实现;

-从云端下载软件:
	出于网络信息安全的考量, 本地控制器内的UCM模块一般不会和云端建立直接的通讯下载软件, 
	而一般由其他应用或者中央网关作为代理服务器下载;

-执行鉴权等安全操作:
	软件升级过程中涉及的验证签名过程, 一般由UCM再调用Crpto模块操作安全环境来执行;
	而访问控制则一般由UCM配合AUTOSAR中的IAM和EM模块来实施;





