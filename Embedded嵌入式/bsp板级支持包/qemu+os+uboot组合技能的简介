交叉编译的核心能力, 有3 部分:
	* 1.编译工具链:        gcc/clang, glibc/llvm, gmake/cmake, gdb 调试工具的混合使用;
	* 2.os 制作工具链:     os + bootloader 引导系统 + img 镜像制作方法(img 镜像烧写方法);
	* 3.qemu 仿真器工具链: qemu 跨平台仿真, qemu + gdb 跨平台调试;



ps:
	掌握了1.编译工具链, 你可以在c/c++ 应用开发编码中, 横扫任何软件的tarball, 从源码到exe 程序, 自由开发c/c++ 程序;
	掌握了2.os 制作工具链 + 3.qemu 仿真器工具链, 你可以在多款os 操作系统开发中, 横扫多款os 的开发维护, 真正达到操作系统程序员级别;
	ps: 
		2+3 是不分家的, 严格来说, 2+3 是可以合并的, 交叉编译的核心能力只有两条分界线:
			* 只会1.编译工具链 = 应用开发程序员
			* 1.编译工具链 + 2.os 制作工具链 + 3.qemu 仿真器工具链 = 操作系统开发程序员



ps:
	os 生成工具链:
		* buildroot(uboot+busybox)
		* aosp
		* openwrt
		* rt-thread
		* freertos(默认没有bootloader)
		* nuttx(默认没有bootloader)
		...



通用操作系统方案:
	* os 生成(elf/bin/img/iso)
	* uboot/grub 引导
	* img/iso 镜像封装
	* qemu+gdb 调试
