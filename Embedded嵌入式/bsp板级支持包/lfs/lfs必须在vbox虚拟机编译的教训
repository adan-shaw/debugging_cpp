谨记:
	千万不要在母系统中搭建lfs环境, 很容易污染母机系统, 导致系统损坏, 逼你要重装系统;
	一切操作请在vbox虚拟机中进行:
		一个vbox 虚拟机, 一条交叉编译链!!
	千万不要嫌弃vbox 虚拟机太多!! 这其实是最直接, 最简单, 最安全的办法;

	交叉编译链之间, 互相污染, 这个问题才是最头疼的!!
	(不要自作聪明, 在一个系统中集成多条交叉编译链, 愚蠢之极, 自作聪明;
	 简单即最可靠, 最聪明!!)



也不要轻易在母机系统中安装交叉编译工具, 会导致很多问题, 例如: 
	导致母机系统出问题, 比如说母机原本的x86 gcc8.3 编译链不能用
	还有就是母机系统的/lib /lib64 等运行环境被扰乱, 这种消耗, 得不偿失!!



不要随便安装crosstools(不好用) 安装后, 极易容易导致x86 母机系统原生的工具链混乱, 最好的方案是:
	一台机, 一条编译链!!
	否则容易导致lib 混乱, include 混乱, 
	编译时容易出错, 各种找不到库, 各种undefined reference,
	一个虚拟机, 一个版本gcc, glibc, linux kernel, 反而是最简单的!!
	要是这么容易管理多条crosstools, 那交叉编译工具链就不会这么复杂了.



交叉编译时, 需要指定include lib 等文件的时候, 
apt 自动安装, 很容易污染母机文件, 造成include lib 等文件混乱!! 这样可能更麻烦;
母机文件污染问题, 才是为什么要下狠心, 自己搭建交叉编译链的重点.

也不要轻易在母机系统中安装交叉编译工具, 会导致很多问题, 例如: 
	导致母机系统出问题, 比如说母机原本的x86 gcc8.3 编译链不能用
	还有就是母机系统的/lib /lib64 等运行环境被扰乱, 这种消耗, 得不偿失!!
	就算你正确安装了多条crosstools, 以后管理起来, 也十分麻烦!!
