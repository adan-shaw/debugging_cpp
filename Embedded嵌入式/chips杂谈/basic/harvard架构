1.哈佛结构 (英语: Harvard architecture)
	哈佛结构是一种将程序指令储存和数据储存分开的存储器结构. 

	中央处理器首先到程序指令储存器中读取程序指令内容, 解码后得到数据地址, 
	再到相应的数据储存器中读取数据, 并进行下一步的操作(通常是执行). 
	程序指令储存和数据储存分开, 数据和指令的储存可以同时进行, 
	可以使指令和数据有不同的数据宽度, 如Microchip公司的PIC16芯片的程序指令是14位宽度, 而数据是8位宽度. 

	与冯.诺曼结构处理器比较, 哈佛结构处理器有两个明显的特点: 
		1、使用两个'独立的存储器'模块, 分别存储'指令'和'数据', 每个存储模块都'不允许'指令和数据并存; 
		2、使用独立的两条总线, 分别作为'CPU'与'每个存储器'之间的专用通信路径, 而这两条总线之间毫无关联. 

	改进的哈佛结构, 其结构特点为: 
		1、使用两个独立的存储器模块, 分别存储指令和数据, 每个存储模块都不允许指令和数据并存, 以便实现并行处理; 

		2、具有一条'独立的地址总线'和一条'独立的数据总线', 利用'公用地址总线'访问两个存储模块(程序存储模块和数据存储模块), 
			 '公用数据总线'则被用来完成'程序存储模块', 或'数据存储模块'与CPU之间的 数据传输; 

	哈佛结构的微处理器通常具有较高的执行效率, 其程序指令和数据指令分开组织和储存的, 执行时可以预先读取下一条指令. 
	目前使用哈佛结构的'中央处理器'和'微控制器'有很多, 除了上面提到的Microchip公司的PIC系列芯片, 还有:
		摩托罗拉公司的MC68系列、
		Zilog公司的Z8系列、
		ATMEL公司的AVR系列
		安谋公司的ARM9、ARM10和ARM11. 






2.冯.诺曼结构(英语: von Neumann architecture), 也称: 普林斯顿结构
	冯.诺曼结构是一种将'程序指令存储器'和'数据存储器'合并在一起的电脑设计概念结构. 

	本结构'隐约指导了'将储存装置与中央处理器分开的概念, 
	因此依本结构设计出的计算机又称储存程式型电脑. 

	冯.诺曼结构处理器具有以下几个特点: 
		必须有一个存储器; 
		必须有一个控制器; 
		必须有一个运算器, 用于完成算术运算和逻辑运算; 
		必须有输入和输出设备, 用于进行人机通信. 





