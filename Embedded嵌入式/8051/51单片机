#
# 0.MCU 一定是8bit 单片机吗?
#
MCU 不一定都是8bit 单片机, 也有32bit 的, 具体看设计需求;
但一般情况下, 8bit 的芯片, 都是MCU, 都是单片机;

32bit 的芯片, 可能是dsp, 可能是mpu[类似PC的cpu, 不带io模块的], 也可能是MCU,
所以32bit 的芯片不一定全是MCU;





#
# 1.51单片机
#
51单片机, 只有一些简单的功能控制, 比如说:
		键盘输入
		io 输出, 控制灯泡, 电机, 傻瓜显示屏(纯数字显示屏or 简单'字母/文字'显示屏)
		简单的小驱动(慢, 傻, 小)

小型芯片最终只剩下这些市场了, 高端的小芯片市场, 都往FPGA 跑:
	FPGA 可以做原生指令集设计, 可以做部分算法优化;
	FPGA 具有更高的速度, 性能, 效率, 可以应用到更多实际场合(有线/无线网卡,高速响应芯片等场合);
	FPGA 可以固化成小芯片, 给芯片厂商批量生产;

现在的小芯片市场, 已经变成了芯片制造or 高端FPGA 驱动,
旧的小芯片市场, arm 小芯片, 32bit 小芯片, 他们的市场都是面向电子电路, 硬件工程师的;





#
# 2.小型芯片的编程规律
#
* 根据需求, 设计电路图(软硬结合);
* 根据需求, 看懂电路图;
* 导入芯片'寄存器register的布局.h'头文件
* 初始化各种芯片厂商定义的初级数据: 包括寄存器, io引脚的初始化值等信息;
* 根据'芯片寄存器'初始化之后的数据 + 芯片指令集的定义, 编写出一些小功能程序(极其简单);
* 如果规模稍微大一点的, 可能会用到I2c片内通信(双线8bit), com(8线8bit), can(I2c 的升级版)等realtime 通信协议,
	做小芯片之间的联合程序(但功能也不会很复杂)
* 调试这些小程序





8051的时钟周期、机器周期、指令周期:
	时钟频率:是指为单片机提供时钟信号的振荡源的周期(也叫时钟周期), 
					当采用12MHz晶振时, 一个振荡周期是1/12M秒(1/12000000s);
	机器周期:对于标准51架构而言, 1个机器周期为12个时钟振荡周期, 即1微秒;
	指令周期:执行一条指令的时间, 是机器周期的倍数. 不同的CPU, 执行不同的指令, 所需要的指令周期不同;
