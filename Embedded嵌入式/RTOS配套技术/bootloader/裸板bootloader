BootLoader是裸板程序组成, 因此可以参考uboot来写; 
写一个简单的BootLoader, 他的功能就是能够启动内核; 
因此, BootLoader所要实现的功能就是: 
	* 1.关闭看门狗:
				开发板默认是打开的, 如果不关闭, 那么在开发板起来之后一段时间之后会复位

	* 2.初始化时钟:
				设置分频系数, 为了让系统能够跑的更快

	* 3.初始化sdram

	* 4.重定位代码:
				如果BootLoader太大, 那么就需要重定位, 
				也就是将BootLoader本身的代码从flash复制到他的链接地址去

	* 5.执行main函数, 就是执行启动的第二阶段, 利用main 主程序来接管cpu;
			裸板程序也不需要考虑太多, 直接结束BootLoader 函数, 转跳进main() 函数即可;



由于裸板程序比较简单, 一个main() 就行了, 一个main() 程序, 一个*.c 文件, 就是一个os img;
更不用考虑太多安全问题, 基本上都是傻瓜程序, 
所以BootLoader程序比较简单;



ps:
	8 bit 单片机的各个寄存器初始化, io 口初始化, 等等操作, 就可以看成是一个BootLoader是裸板程序的实现;
