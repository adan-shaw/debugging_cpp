以实时系统-RTOS类的OS为例:
		RT-Thread:
			RTOS的一种, 具备一个IoT OS平台所需的所有关键组件, 例如GUI、网络协议栈、安全传输、低功耗组件等等, 
			是一个组件完整丰富、高度可伸缩、简易开发、超低功耗、高安全性的物联网操作系统


		μClinux:
			RTOS的一种, 继承了Linux操作系统的主要特性, 
			包括良好的稳定性和移植性、强大的网络功 能、出色的文件系统支持、标准丰富的API, 以及TCP／IP网络协议等.
			因为没有MMU内存管理单元, 所以其多任务的实现需要一定技巧.


		VxWorks:
			RTOS的一种, 具有一个高性能的操作系统内核Wind(实时性好、可裁减)友好的开发调试环境、较好的兼容性、支持多种开发和运行环境;
			支持可预测的任务同步机制、支持多任务间的通信、存储器优化管理、操作系统的(中断延迟、任务切换、驱动程序延迟等)行为是可知的和可预测的.
			实时时钟服务+中断管理服务.


		Huawei LiteOS: 
			RTOS的一种, 面向IoT领域, 构建的轻量级物联网操作系统, 
			以轻量级低功耗、快速启动、互联互通、安全等关键能力, 为开发者提供"一站式"完整软件平台;


		ROS:
			一个面向机器人的开源的元操作系统(meta-operating system),
			提供类似传统操作系统的诸多功能:硬件抽象、底层设备控制、常用功能实现、进程间消息传递、程序包管理等.
			并且提供相关工具和库, 用于获取、编译、编辑代码以及在多个计算机之间运行程序完成分布式计算.



因此, 基本上, 嵌入式实时系统的功能&用途十分多, 包括(以STM32为例):
	* 访问flash 存储器, 甚至可以做SSD主控/SATA主控;
	* 访问传感器: 温湿传感器/光线传感器/声音传感器/超声波/等
	* 访问摄像头
	* I^2c [缺点: 传输距离超级短, 需要放大电路]
	* can 工业总线[can的标准有很多种, 比较繁琐; 有双线同步(带时钟线), 有单线异步(最廉价的lin), 有双线异步(can收发器<-->can控制器)]
	* RS232/RS485/RS422/TTL [最常用只有RS485(半双工), TTL/RS232 用得比较少, RS422 是4条数据线的, 点对点, 全双工]
	* UART通信标准[串行异步]
	* SPI[串行实时], 一般用在片外存储器上;
	* 无线电带socket类: 蓝牙/wifi/蜂窝无线电/广播/ZigBee紫峰/红外遥控(socket 类的)
	...
	* 电机主控(一般8bit机做即可)
	* 键盘主控(一般8bit机做即可)
	* 充电器主控(一般8bit机做即可)
	...

	实在太多, 不好一一描述;
	无线电类的, 一般可以通过增加dsp 模块, 提高实时效率;


