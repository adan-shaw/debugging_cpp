车机的编译工具链方案的由来:
	车机的编译工具链方案, 实际上是由'ADAS车机OS软硬件方案提供商'+车厂共同维护的;

	'ADAS车机OS软硬件方案提供商'提供的服务:
		'ADAS车机OS软硬件方案提供商'会提供基础的编译工具链, 即: 
			- gcc/clang 编译器
			- glibc/llvm(c/c++ 运行时库)
			- cmake/bazel 编译链接工具
			- gdb/gdb-server 等调试工具

	车厂的工作内容, 则是利用这些基础工具, 将车控系统的关键软件移植到位:
		* 通信中间件
		* 信号控制BSW 层
	将这一层的软件移植到位, 那么通信/控制层, 就基本稳定了;

	另外设备驱动方面:
		由于'ADAS车机OS软硬件方案提供商'没办法确定车厂使用拿些设备驱动,
		车厂也希望自己有设备选择权(这样有助于发展下游设备产业)
		因此, 实际上整车设备驱动, 也是由车厂BSP 技术员, 把设备全部移植到位的;

	然后车厂就会继续在虚拟机里面, 进行进一步的业务开展:
			一般是移植一些自动驾驶的软件框架到linux 系统上面, 这些基本上都是AI 机器学习框架;
			linux 镜像安装完毕即布局完毕, 剩下就是AI 机器学习框架+自动驾驶算法设计了;
			ps:
				至于视频重数据流是如何无损导入linux 虚拟机, 做'AI 机器学习框架+自动驾驶算法'计算的, 请自行阅读: ./adas自动驾驶AI/车载多媒体数据流

	最终, 车机部分的车控系统, 到此就算是部署完毕了;
	接下来剩下就是座舱系统布局;



	座舱系统布局:
		车机座舱系统一般是android 系统(这部分才是比较长久的业务, 跟手机终端一样, 可以长时间控制, 不断推送更新, 维护时长较长)
		车控系统, 是为了让汽车智能驾驶, 自动驾驶,
		座舱系统, 则是为了让客户舒适驾驶, 舒适使用的, 这里面有很大的商业盈余空间

	由于座舱系统是一个android 系统, 所以座舱系统的编译工具链方案, 实际上就是aosp 交叉编译链方案, 跟android 系统是一样的, 还要看车机的座舱Soc 上面的硬件布局;
	这部分'ADAS车机OS软硬件方案提供商'会不会提供android 镜像ROM, 这个有待考证(估计不会提供)
	(aosp 重新编译, 定制, 是比较麻烦的, android 镜像定制压力较大, 'ADAS车机OS软硬件方案提供商'提供ROM镜像就不用这么麻烦了)

	最终, 维护车机的编译工具链方案, 实际上就是bsp 的工作:
		* 平台选型(车控系统+座舱系统)
		* 工具链适配(车控系统工具链+座舱系统aosp工具链)
		* 关键'软件/驱动'移植
		* 平台稳定性测试
		...
