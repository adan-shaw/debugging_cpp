车机的编译工具链方案的由来:
	车机的编译工具链方案, 实际上是由'ADAS车机OS软硬件方案提供商'+车厂共同维护的;
	'ADAS车机OS软硬件方案提供商'会提供基础的编译工具链, 即: gcc/clang 编译器, glibc/llvm(c/c++ 运行时库), cmake/bazel 编译链接工具, gdb/gdb-server 等调试工具;
	而车厂的主要任务是利用这些基础工具, 将:
		* 通信中间件
		* 信号控制BSW 层
	将这一层的软件移植到位, 那么通信/控制层, 就基本稳定了;

	然后车厂就会继续在虚拟机里面, 进行进一步的业务开展:
		* 座舱虚拟机系统布局: 
			一般是android 系统移植(aosp 重新编译, 定制, 或者'ADAS车机OS软硬件方案提供商'会提供rom 镜像, 这样就不用这么麻烦了)
			android 镜像安装完毕即布局完毕, 剩下就是座舱应用设计了;
			主要是android 镜像定制压力大;
		* linux 虚拟机系统布局:
			一般是移植自动驾驶的软件框架, 到linux 系统上面, 这些基本上都是AI 机器学习框架;
			linux 镜像安装完毕即布局完毕, 剩下就是AI 机器学习框架+自动驾驶算法设计了;
			ps:
				至于视频重数据流是如何无损导入linux 虚拟机, 做'AI 机器学习框架+自动驾驶算法'计算的, 请自行阅读: ./adas自动驾驶AI/车载多媒体数据流



	最终, 维护车机的编译工具链方案, 实际上就是bsp 的工作:
		* 平台选型
		* 工具链适配
		* 关键'软件/驱动'移植
		* 平台稳定性测试
		...
