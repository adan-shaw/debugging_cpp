cn 政府对汽车的监管, 主要分两个方向实施:
	* 汽车os
	* 汽车后端数据

详情, 请先查看: ../car汽车专题图谱



# adas后端支援:
	* V2X[Vehicle to X]
	* 远程'监控/遥控'业务(远程查看汽车状态, 关灯关窗, 汽车状态自我检查, 监控摄像头开启等)
	* 地图数据(GPS 卫星定位 + 地图服务)
	* 交通数据(道路是否阻塞, 交通繁忙情况等, 包括收费站收费路段, 容易拍照罚款的路段等等)
	* 天气数据(能见度, 是否下雨等)
	* 市政数据(是否在修路)
	* 公安数据(是否发生交通事故, 造成阻塞)
	* ...

	这部分监管, 比较简单, 数据直接在服务器设置访问权限, 进行服务器权限划分, 划分等级如下:
		* 政府manager root
		* '地图/天气'等商业app 软件(较高权限访问: 交通/公安/市政/气象/地图等数据, 但受到合法监管)
		* 用户(只能通过商业app 软件进行数据访问)



# adas操作系统:
	* 车规芯片(车规SoC + 车规MCU + 安全专用芯片[一般只是小型存储芯片])
	* 编译工具链(以: bazel/cmake 为例)
	* 车控系统(以: soc=qnx/ros/linux, bsw=autosar/osek 为例)
	* 虚拟化技术(以: qnx/ros/linux的kvm/qemu 为例)
	* 通信层(vsomeip/fastdds/opendds)
	* bsw 信号控制层(autosar/osek)
	* bsw 信号控制层的'仿真&诊断'软件(以vector/etas/eb 工具链为例)
	* tbox终端+ota服务+信息安全保障技术服务+远程遥控业务(实际就是V2X 前端, 做一些远程遥控+信息安全保障服务)[linux/android]
	* 座舱系统(MCU + android 改造版[通过aosp 重新编译, 重新将完整的tcp/ip 协议栈, 实现重新定制aosp 镜像])
	* 行车记录仪

	这部分监管, 比较复杂:
		+ 传感器数据(bsw 控制信号层/ETH 通信层):
			政府会强制车企安装'用户态/内核态'的插件, 进行数据抽查分析, 上报, 进而分析大面积的传感器数据是否合规;
			[ETH 车域网数据抽查, 网络包监控过滤分析(iptables), 统一在ETH 层完成这项任务]
		+ 入网信息安全校验:
			主要是tbox 里面做的工作, 汽车想要联网获取adas后端支援, 需要经过比较强的安全审核(入网安全认证);
			汽车想要在线升级系统, 也需要经过比较强的安全审核(OTA);
		+ 行车记录仪:
			可能需要接入公安网的数据, 接受监管!!
			摄像头不能随便打开, 随便记录, 否则被认为是乱拍照, 政府是不允许这样做的;
		+ 对车辆设计进行监管:
			- 车速范围限制
			- 电池容量限制
			- 外型限制
			- 钢材最低标准
			- 防撞标准
			...



总结:
	cn 政府的监管系统, 是有终端的(一般以驱动/后台守护程序的方式, 强制加插到汽车OS 中),
	发现可疑数据, 会上传到server 进行分析, 一般不会干扰车载系统本身的运行, 不会干扰太多车长的设计;
	这些都是共性技术, 中国也有汽车协会, 汽车协会的工作, 就是这些, 基本上就是做通用插件;
	把监管软件安装上去, 同时加强与各个车厂的合作, 数据不符合要求的, 一律不准上路;



