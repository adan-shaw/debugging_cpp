1.区分现代计算机的结构体系的方法: 看系统总线 !!
	* 只有一条系统总线的, 多半是冯·诺依曼结构;
	* 数据总线, 指令总线分开的, 多半是哈佛结构;
	不会两者结合的, 别幻想.

	哈佛结构先进一点, 但由于太复杂, 基本上只在部分实时嵌入式芯片, 多媒体嵌入式芯片中出现.
	(数据总线, 指令总线分开, 可以极大地提高数据处理效率, 提高实时性, 
	 同时也可以一定程度上提高传输数据量, 适合多媒体系统[少用])

	大部分, 其实还是冯·诺依曼结构, 你看看cpu 架构图就知道了.





2.哈佛结构的好处:
	相对于冯·诺依曼结构, 哈佛结构更可靠, 更加适合于那些程序固化、任务相对简单的控制系统, 
	哈佛结构的微处理器也相对更高效. 


	哈佛结构, 是一种将程序指令储存和数据储存分开的存储器结构. 
	中央处理器首先到程序指令储存器中, 读取程序指令内容, 解码后得到数据地址, 
	再到相应的数据储存器中读取数据, 并进行下一步的操作(通常是执行). 

	程序指令储存和数据储存分开, 数据和指令的储存可以同时进行, 
	可以使指令和数据有不同的数据宽度, 如:
		Microchip公司的PIC16芯片的程序指令是14位宽度, 而数据是8位宽度. 

	哈佛结构的微处理器 通常具有较高的执行效率. 
	其程序指令和数据指令分开组织和储存的, 执行时可以预先读取下一条指令. 





3.冯·诺依曼结构的好处:
	不过在通用计算机系统中, 应用软件的多样性使得计算机要不断地变化所执行的代码的内容, 
	并且'频繁地'对数据与代码占有的存储器进行重新分配, 
	这种情况下, 冯·诺依曼结构占有绝对优势!! 因为统一编址可以最大限度地利用资源;
	而哈佛结构的计算机若应用于这种情形下则会对存储器资源产生理论上最大可达50%的浪费, 这显然是不合理的. 








一
冯·诺依曼理论的要点是: 
	数字计算机的数制采用二进制; 计算机应该按照程序顺序执行. 
	人们把冯诺依曼的这个理论称为冯诺依曼体系结构. 
	从ENIAC到当前最先进的计算机都采用的是冯诺依曼体系结构. 
	所以冯诺依曼是当之无愧的数字计算机之父. 

	根据冯诺依曼体系结构构成的计算机, 必须具有如下功能: 
	把需要的程序和数据送至计算机中; 
	必须具有长期记忆程序、数据、中间结果及最终运算结果的能力; 
	能够完成各种算术、逻辑运算和数据传送等数据加工处理的能力; 
	能够根据需要控制程序走向, 并能根据指令控制机器的各部件协调操作; 
	能够按照要求将处理结果输出给用户. 





二
	哈佛结构是为了高速数据处理而采用的, 
	因为可以同时读取指令和数据(分开存储的). 
	大大提高了数据吞吐率, 缺点是结构复杂. 
	通用微机指令和数据是混合存储的, 结构上简单, 成本低. 
	假设是哈佛结构: 
	你就得在电脑安装两块硬盘, 一块装程序, 一块装数据, 
	内存装两根, 一根储存指令, 一根存储数据





三
	是什么结构要看总线结构的. 
	51单片机虽然数据指令存储区是分开的, 
	但总线是分时复用得, 所以顶多算改进型的哈佛结构. 

	ARM9虽然是哈佛结构, 但是之前的版本也还是冯·诺依曼结构. 

	早期的X86能迅速占有市场, 一条很重要的原因, 
	正是靠了冯·诺依曼这种实现简单, 成本低的总线结构. 


	现在的处理器虽然外部总线上看是诺依曼结构的, 
	但是由于内部CACHE的存在, 
	因此实际上内部来看已经算是改进型哈佛结构的了. 


	至于优缺点, 哈佛结构就是复杂, 对外围设备的连接与处理要求高, 
	十分不适合外围存储器的扩展. 
	所以早期通用CPU难以采用这种结构. 

	而单片机, 由于内部集成了所需的存储器, 所以采用哈佛结构也未尝不可. 
	现在的处理器, 依托CACHE的存在, 已经很好的将二者统一起来了. 



	我个人觉得萝卜青菜各有所爱, 至少未来一段时间内这二者共存的可能性更大, 
	各有优缺点, 所以非要比个好坏的话. 不太好说吧 







