kernel_liteos_m:
	面向实时mcu 系统, 一般都是低性能工控系统专用, 和普通工控mcu 类似;
	liteos m, m=micro=微小系统的意思;



kernel_liteos_a:
	面向多媒体mcu, 例如ipc, 广告屏, 等设备, 是A 核, 有一定性能和运算能力;



具体kernel_liteos_m/kernel_liteos_a 的区别, 你可以直接从硬件配置, 就能看出区别来;
具体负责什么样的工作, 就需要什么样的硬件, 这方面, 需要详细看硬件设计图, 当然还要看软件架构图;



ps:
	一般情况下, openharmony的JS-UI框架子系统, 一般只用在kernel_liteos_a 上面;





题外话:
	* kernel_liteos_m/kernel_liteos_a 是否共用一套liteos kernel (待定, 需要深入研究才知道, 大概率会共用一套内核逻辑)
	* kernel_liteos_m=实时系统, kernel_liteos_a=分时系统? (待定, 需要深入研究才知道)

		[如果上一条疑问成立, 则这条疑问不成立, 同一套内核逻辑, 不太可会拆分出一个分时系统版本, 一个实时系统版本, 这两个问题基本上是对立问题]
