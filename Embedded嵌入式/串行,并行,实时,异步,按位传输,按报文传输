彻底区分这些东西, 现在的区分格局有问题:
	i2c (串行,1bit,单工,有时钟线)

	rs232 (串行,1bit,单工,有时钟线)
	rj45 (串行,1帧,单工,无时钟线)

	ddr (并行,64bit,单工*2=双工=双通道,有时钟线)
	pcie (并行,x1,x4,x8,x16,单工,有时钟线)
	...



在一条线路上, 1bit, 1bit发送数据的, 按'固定的帧格式'传输数据, 都是串行通信;
并行通信, 每次传输4/8/16 bit 数据, 也有'固定的帧格式', 通常带有始终线, 实时通信;(并行无异步)

串行如果有实时性需求, 就加一条时钟线咯(串行异步无时钟线);


长距离, 就用串行咯, 
串行异步, 常见于PC与嵌入式设备通信, 包括tcp/ip 都是串行异步通信;
串行同步, 常见于嵌入式设备之间的实时通信;
短距离, 实时性要求高, 数据量大, 并行也行(内存条, PCIE 都是并行的);





并口, 串口的最终说法:
	将数据压缩为一维数组, 然后在一根线上逐位发送, 且不带始终线的, 都是串行;

	并行其实是:
		带始终线, 且用1-64 根线作为数据线, 且用n 根线作为控制线, 来发送实时数据;

	i2c 是并口, 因为i2c 带时钟线, 没有约定默认的接收频率(即波特率);
	即便i2c 只有一根数据线, 那它也是1bit 的并行数据传输协议;

	其实, 更直接地说:
		不带时钟线, 约定波特率, 按包(帧)发送的, 都是串口,
		带时钟线, 不约定波特率, 按bit 发送的, 都是并口, 无论一次发1bit, 还是8bit/64bit, 都是并口


