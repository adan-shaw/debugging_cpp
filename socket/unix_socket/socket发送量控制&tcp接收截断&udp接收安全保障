socket 数据发送, 用申请动态内存的方式, 比较适合;
否则会发送多余的数据, 如: 
	字符串缓冲区是char buf[1024];
	而字符串长度只有64 byte;
	如果你不做长度计算, socket 会直接将整个buf[1024] 发送到网络上面, 这样做是最损耗性能的!!
	io 速度远比内存速度要慢!!
	json 解析速度也其实, 效率不太高, 而且json 解析可能也会new 内存;
	所以其实网络发送数据, 使用new 内存, 并不可怕, 也是必须的;
	使用new 内存块, 可以少发数据, 也是值得的


tcp socket 接收数据, 按照帧大小限定发送/接收缓冲区, 截断式接收, 还要进行重新排列;

udp socket 接收数据, 需要保证每次发送数据时, 当前socket 缓冲区能容纳本次数据发送的总数据量,
										否则, 接收数据时, 旧数据包可能被冲刷掉,
										比较直接的优化方式是: 修改socket 接收缓冲区的大小,
										其次是, 每次接收完毕之后, 都进行md5 重新校验, 查看数据的完整性,
										最后是, 通过套接字opt 选项, 获取udp socket 的buf 情况, 进而做下一步接受处理操作
