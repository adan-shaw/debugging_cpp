为什么需要二进制查看工具?
答:
	互联网程序, 最小粒度就是char 字符, 
	因此, 互联网程序, 协议, 基本上都是基于text 文本, 你可以直接用编辑器查阅, 因此不需要二进制查看工具;
	(互联网程序, 基本上都是脚本, 可以直接text 文本查阅; 
	 互联网协议, 也是text 文本, 抓包之后还是可以直接text 文本查阅)
	 互联网数据流, 也是text 文本, 抓包之后还是可以直接text 文本查阅)

	但在工业程序上面, 尤其是MCU 单片机, 由于数据流太小, 实时性很高,
	因此, 嵌入式行业, 基本上都需要hexdump 二进制查看工具, 来查看程序/协议/数据流;
	而且工业程序实时性要求很高, 因此, 需要先导出数据流, 用二进制浏览器来分析协议内容和数据;
	(直接二进制打开查看, 是MCU 行业常见的做法)



	windows 系统, 可能有GUI 可视化hexdump 工具,
	linux 系统, 根本不需要GUI 可视化hexdump 工具, 直接将程序/协议/数据流的内容, 打印到tty 控制台即可, 非常方便;





#
# hexdump 工具说明:
#
-b, --one-byte-octal       单字节八进制数值显示方式
-c, --one-byte-char        单字节字符显示方式

-C, --canonical            典型的十六进制数值加ASCII字符显示方式(最常用的选项)

-o, --two-bytes-octal      采用两字节的八进制数值显示方式
-x, --two-bytes-hex        采用2字节的十六进制数值显示方式(默认选项)
-d, --two-bytes-decimal    双字节十进制数值显示方式

-e, --format format_string 采用指定的格式字符串定义的格式显示数据

-n, --length length        显示指定字节数量的输入数据


-f, --format-file file     指定一个文件, 其中包含一个或多个由换行符分隔的格式字符串(忽略其中的空行或第一个非空字符为“#”的注释行)
-L, --color[=when]         可以指定输出颜色
-s, --skip offset          从输入数据的开始位置跳过指定字节数量的数据
-v, --no-squeezing         显示所有的输入数据, 不管是否重复





#
# hexdump 工具的使用
#
1.显示文件二进制(等价于: hexdump -x freebsd.jpg)
hexdump freebsd.jpg

2.以ASCII 字符的格式(十六进制), 显示文件内容
hexdump -C freebsd.jpg

3.以ASCII 字符的格式(十六进制), 显示文件内容, 并且后移128 字节(前128 字节的数据忽略, 不显示), 相当于转跳到某个pos位置
hexdump -C freebsd.jpg -s 128

