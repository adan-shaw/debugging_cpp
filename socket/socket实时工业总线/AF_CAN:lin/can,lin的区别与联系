#
# 1.LIN 是否能像CAN 一样, 使用SocketCAN 库, 使用socket 编程?
#
SocketCAN是Linux下用于CAN总线通信的框架, 而LIN(Local Interconnect Network)是另一种总线协议, 
虽然两者在概念上相似, 但在实现上存在差异;

SocketCAN本身并不直接支持LIN协议, 
因此, 你不能直接使用SocketCAN 库来进行socket 编程, 也不能用ip 命令来创建LIN虚拟网络空间;

因此, 你只能通过物理机来仿真, 或者购买LIN 仿真软件进行仿真;





#
# 2.如何通过CAN 虚拟网络空间, 来有限度地模拟LIN
#
你可以通过模拟CAN接口来模拟LIN总线的某些特性, 尽管这不是LIN虚拟网络空间, 但可以作为模拟LIN通信的一种方式:
	sudo ip link add dev vlin0 type vcan
	# 假设设置为125kbit/s的位速率(需要的话, 你还能设置更低的位速率)
	sudo ip link set vlin0 type can bitrate 125000
	sudo ip link set vlin0 up

接下来, 你就详细对照lin 报文发送数据即可!!
使用的仍然是CAN 网络, 只不过自己封装数据帧即可, 操作步骤和CAN 保持一致即可;





#
# 3.can / lin 的区别
#
lin 基本上就是can 的减配版, 半双工, 同样是载波侦听, 位速率也有所降低, 可靠性也有所降低, 但硬件布线便宜;

lin 相对于can 来说, 可靠性并没有那么高, 性能, 吞吐量, 抗干扰能力, 都没有can 好, 但lin 相对于can 来说, 价格低廉;

详情自己看lin 协议的详细内容.

can, lin, lan以太网, 都是串行通信!! 数据都是以串式写在一个介质信道传输出去的,
线路的帧速, 由线路所在的高频,高敏感,高精度的接收器(或者说识别器)所决定的;
