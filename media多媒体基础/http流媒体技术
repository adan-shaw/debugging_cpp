http流媒体技术简介:
	http流媒体技术分为:
		* 视频点播
		* 一对多(直播)/多对多(联合直播), 延时性要求低, 甚至可以直接播放电影文件, 直接切换镜头;
		* 一对多/多对多-实时会话, 延时性要求高, 趋向于实时;

	由于本节与'media推流拉流总纲', 内容重复, 
	因此, 关于'一对多/多对多'的'直播/会话', 详细内容请查看'media推流拉流总纲';
	本节只谈论视频点播;





视频点播服务:
	视频点播服务一般使用web浏览器rtsp/rtmp/hls 流媒体播放器;
	通常情况下, web浏览器有两种播放方式:
		* 直接下载文件到本地, 然后再播放;
		* 解析rtsp/rtmp/hls 媒体流;

	而流媒体播放器, 只有一种播放方式:
		* 解析rtsp/rtmp/hls 媒体流;



	以web浏览器为例, 谈论这两种播放方式的优劣:
		* 直接下载文件到本地, 然后再播放;
			优点:
				简单, 媒体文件存储方便, 当成file存储, 没有拉流推流过程, 只消耗网络带宽, 服务器cpu消耗较少;
			缺点:
				* 用户数量多的时候, 网络带宽容易被拥堵;
				* 没有实时性, 基本上相当于: 下载文件再播放;
				* 对媒体文件资源压缩要求很高, 基本上能压缩多少, 就压缩多少, 否则网络带宽拥堵问题更加难以解决;
				* 对数据重排技术要求比较高, 对流媒体文件封装格式, 要求比较高;
					不过一般mp3/mp4 封装, 支持装载到哪里, 就播放到哪里, 减少失真的可能;
					因此, mp3/mp4也支持预缓存, 只要数据切片重组顺序没错, 视频就能继续播放;
					(ps: 有些多轨道的media 媒体封装格式, 是不支持mp3/mp4 这种, 数据传到哪, 就能播放到哪的封装;
							 这种封装有好处, 就是: 简单, 快捷, 体量少; 坏处就是: 不可编辑, 一般专业录音录像设备, 不会导出mp3/mp4的)
				* 时间点跳跃, 只看预载进度条, 跳跃点越远, 只能等进度条继续加载, 加载完成, 才能跳跃;


		* 利用rtmp/hsl 进行ts切片, 然后分发切片, 再逐片播放:
			优点:
				相对简单, 装载到哪里, 就播放到哪里(也是对mp3/mp4 文件进行切片), 
				同时有能避免直接下载文件到本地, 保护数据安全, 也减少服务器带宽消耗, 减少拥堵, 是目前网络视频媒体商的常用方法;
				不过对于新浪这种大型门户, 社交网络来说, 用户量巨大, 视频繁杂, 视频类型不固定, 他们是没有办法对所有视频进行一一切片的;
				(网络视频媒体商, 会对影视作品进行统一切片, 然后再上架, 然后再播放;
				 新浪这样的门户, 社交运营商, 没办法对每个用户的视频数据进行切片, 那就只能限制视频的大小, 加大压缩的力度;
				 当然一般这种综合性的网站, 都是文字/图片/小视频/视频/直播, 混合运营, 涉及到的东西比较杂;)
				另外, 进度条跳跃, 可以跟服务器协商;
			缺点:
				比较繁琐, 服务器存放的文件碎片比较多, 需要的技术维护人员也比较多,
				不过要是影视剧下架了, 就可以直接把存储disk 扔到二线服务器上面, 那就不用管那么多了, 没准会在背后偷偷开个小网站, 继续播;


