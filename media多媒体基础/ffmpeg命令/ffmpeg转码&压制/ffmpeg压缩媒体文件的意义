1.一般压缩操作, 可以直接使用可视化handbrake工具进行压缩, 
	handbrake也是基于ffmpeg来实现的.

	除非你是写软件程序, 那就要用命令压缩, 
	或者ffmpeg API 进行压缩.

	使用handbrake 压缩媒体文件, 其实更方便, 也有很多强大的功能.





2.如何实现ffmpeg 的nvidia 硬件加速, 以提高压缩, 转码的效率?
	详情, 你可以看看: ../ffmpeg硬件加速





3.互联网流媒体视频, 没有压缩的必要!!
	一般流媒体上面的数据, 都是压缩过的, 压缩空间基本都很少(人家服务器肯定先压缩了)
	一般你自己录影的, 才有压缩的价值, 都是没有压缩过的, 压缩空间很大.





4.媒体数据(媒体文件), 编程/编辑之前, 一般都需要先压缩, 再操作
	无论是opencv or ffmpeg or nginx 推流, 处理视频音频的第一步, 都是先压缩数据,
	你不先压缩, 前端解码设备应付不来这么厚重的数据流,
	网络和服务器, 也绝对不允许上传这么大的数据流.
	所以: 
		摄像头, 音麦, 他们录取到的数据格式, 都是很大的. 
		像pcm 什么的, 只是让一个低频计算机不间断录取数据而已, 简单,
		但是即使是这样, 数据量还是很客观的. 
		所以说, 所有影音数据, <数字化>的第一步, 都是先压缩.
		然后再做<数字化处理> 

	有压缩, 就有解压还原, 
	视频播放器, 实际上就是一个解码器. 





5.ffmpeg&c++有什么用:
	其实'解码/编码/切片', 用命令就行了, 为什么要固执到用c++ 接口呢? 难道做播放器? 
	c++ 接口, 可以做更高效率的'解码/编码/切片', 
	同时可以加入自己的特殊'解码/编码/切片'算法, 极大提高媒体数据处理能力, 
	这些, 但靠命令是没办法做到的
