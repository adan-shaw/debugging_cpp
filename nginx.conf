#
# the first nginx.conf for openresty 
#
#####################################
# openresty nginx.conf
# reverse proxy 反向代理 --ok
# forward proxy 正向代理 --ok
#####################################



user www-data www-data;
working_directory /home/tarball/openresty;
worker_processes 1;
worker_rlimit_nofile 4096;

# log level
#error_log /home/tarball/openresty/logs/error.log notice;
error_log /home/tarball/openresty/logs/error.log info;

pid /home/tarball/openresty/nginx.pid;





events {
	worker_connections 1024;
}





#
# http{}
#
http {
	include /home/tarball/openresty/conf/mime.types;
	default_type application/octet-stream;


	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	#		 '$status $body_bytes_sent "$http_referer" '
	#		 '"$http_user_agent" "$http_x_forwarded_for"';
	access_log /home/tarball/openresty/logs/access.log main;


	sendfile on;
	tcp_nopush on;

	#keepalive_timeout 0;
	keepalive_timeout 65;

	gzip on;





	#
	# http server<80>
	#
	server {
		listen 80;

		server_name localhost;
		#server_name www.baidu.com;

		#charset koi8-r;
		charset utf-8;

		access_log /home/tarball/openresty/logs/host80.access.log main;



		location / {
			# 资源存放路径(相对路径)
			#root html;
			# 资源存放路径(绝对路径)
			root /home/tarball/openresty/html;
			# 指定自动首页
			index index.html;
		}

		# 错误页, 会产生重定向, 尽量不用这种方法做, 使用proxy_pass 内部重定向的方法, 性能更好
		# not found error pages to 'the static page' /404.html
		#error_page 404 /404.html;
		# redirect server error pages to 'the static page' /50x.html
		#error_page 500 502 503 504 /50x.html;
		#location = /50x.html {
			# '错误页'存放路径
			#root /home/tarball/openresty/html;
		#}





		# openresty 运行lua 测试(content_by_lua_block, 伪造lua 文件, 接通fastcgi, 自动将标准io 打印输出返回)
		location = /print_all_ngx_var.html {
			content_by_lua_block {
				ngx.say("<html><head><meta charset=\"utf-8\"><title>print_all_ngx_var.html(显示openresty所有内置nginx变量)</title></head><body>");
				ngx.say("ngx.var.nginx_version = ", ngx.var.nginx_version, "<br>\n");
				ngx.say("ngx.var.pid = ", ngx.var.pid, "<br>\n");
				ngx.say("ngx.var.hostname = ", ngx.var.hostname, "<br>\n");
				ngx.say("ngx.var.server_addr = ", ngx.var.server_addr, "<br>\n");
				ngx.say("ngx.var.server_name = ", ngx.var.server_name, "<br>\n");
				ngx.say("ngx.var.server_port = ", ngx.var.server_port, "<br>\n");
				ngx.say("ngx.var.server_protocol = ", ngx.var.server_protocol, "<br>\n");
				ngx.say("ngx.var.remote_addt = ", ngx.var.remote_addt, "<br>\n");
				ngx.say("ngx.var.remote_port = ", ngx.var.remote_port, "<br>\n");
				ngx.say("ngx.var.remote_user = ", ngx.var.remote_user, "<br>\n");
				ngx.say("ngx.var.binary_remote_addr = ", ngx.var.binary_remote_addr, "<br>\n");
				ngx.say("ngx.var.realip_remote_addr = ", ngx.var.realip_remote_addr, "<br>\n");
				ngx.say("ngx.var.host = ", ngx.var.host, "<br>\n");
				ngx.say("ngx.var.http_referer = ", ngx.var.http_referer, "<br>\n");
				ngx.say("ngx.var.http_user_agent = ", ngx.var.http_user_agent, "<br>\n");
				ngx.say("ngx.var.args = ", ngx.var.args, "<br>\n");
				ngx.say("ngx.var.arg_name = ", ngx.var.arg_name, "<br>\n");
				ngx.say("ngx.var.document_root = ", ngx.var.document_root, "<br>\n");
				ngx.say("ngx.var.uri = ", ngx.var.uri, "<br>\n");
				ngx.say("ngx.var.document_uri = ", ngx.var.document_uri, "<br>\n");
				ngx.say("ngx.var.request_uri = ", ngx.var.request_uri, "<br>\n");
				ngx.say("ngx.var.bytes_set = ", ngx.var.bytes_set, "<br>\n");
				ngx.say("ngx.var.body_bytes_sent = ", ngx.var.body_bytes_sent, "<br>\n");
				ngx.say("ngx.var.content_length = ", ngx.var.content_length, "<br>\n");
				ngx.say("ngx.var.content_type = ", ngx.var.content_type, "<br>\n");
				ngx.say("ngx.var.cookie_name = ", ngx.var.cookie_name, "<br>\n");
				ngx.say("ngx.var.request_filename = ", ngx.var.request_filename, "<br>\n");
				ngx.say("ngx.var.request_time = ", ngx.var.request_time, "<br>\n");
				ngx.say("ngx.var.request = ", ngx.var.request, "<br>\n");
				ngx.say("ngx.var.request_length = ", ngx.var.request_length, "<br>\n");
				ngx.say("ngx.var.request_method = ", ngx.var.request_method, "<br>\n");
				ngx.say("ngx.var.request_body = ", ngx.var.request_body, "<br>\n");
				ngx.say("ngx.var.request_body_file = ", ngx.var.request_body_file, "<br>\n");
				ngx.say("ngx.var.request_completion = ", ngx.var.request_completion, "<br>\n");
				ngx.say("ngx.var.scheme = ", ngx.var.scheme, "<br>\n");
				ngx.say("ngx.var.sent_http_name = ", ngx.var.sent_http_name, "<br>\n");
				ngx.say("ngx.var.pipe = ", ngx.var.pipe, "<br>\n");
				ngx.say("ngx.var.connection_request = ", ngx.var.connection_request, "<br>\n");
				ngx.say("ngx.var.status = ", ngx.var.status, "<br>\n");
				ngx.say("ngx.var.msec = ", ngx.var.msec, "<br>\n");
				ngx.say("ngx.var.time_local = ", ngx.var.time_local, "<br>\n");
				ngx.say("ngx.var.geoip_city = ", ngx.var.geoip_city, "<br>\n");
				ngx.say("ngx.var.is_args = ", ngx.var.is_args, "<br>\n");
				ngx.say("ngx.var.limit_rate = ", ngx.var.limit_rate, "<br>\n");
				ngx.say("ngx.var.query_string = ", ngx.var.query_string, "<br>\n");
				ngx.say("ngx.var.upstream_addr = ", ngx.var.upstream_addr, "<br>\n");
				ngx.say("ngx.var.upstream_port = ", ngx.var.upstream_port, "<br>\n");
				ngx.say("ngx.var.upstream_status = ", ngx.var.upstream_status, "<br>\n");
				ngx.say("ngx.var.upstream_cache_status = ", ngx.var.upstream_cache_status, "<br>\n");
				ngx.say("ngx.var.upstream_connect_time = ", ngx.var.upstream_connect_time, "<br>\n");
				ngx.say("ngx.var.upstream_header_time = ", ngx.var.upstream_header_time, "<br>\n");
				ngx.say("ngx.var.upstream_response_time = ", ngx.var.upstream_response_time, "<br>\n");
				ngx.say("ngx.var.upstream_response_length = ", ngx.var.upstream_response_length, "<br>\n");
				ngx.say("ngx.var.upstream_bytes_received = ", ngx.var.upstream_bytes_received, "<br>\n");
				ngx.say("</body></html>");
				ngx.exit(ngx.OK);
			}
		}
	}
}
